function net = InitializeTextonNetwork( input_args )

f=1/100 ;
net.layers = {} ;

%Tamaño luego de esta capa: 64,64,128,1
net.layers{end+1} = struct('type', 'conv', ...
                           'weights',{{f*randn(2,2,1,128, 'single'),...
                           zeros(1,128,'single')}}, ...
                           'stride', 1, ...     					   
                           'pad', 0) ;

net.layers{end+1} = struct('type', 'pool', ...
                           'method', 'max', ...
                           'pool', [2 2], ...
                           'stride', 2, ...
                           'pad', 0);

%Tamaño luego de esta capa: 32,32,256,1
net.layers{end+1} = struct('type', 'conv', ...
                           'weights',{{f*randn(2,2,128,256, 'single'),...
                           zeros(1,256,'single')}}, ...
                           'stride', 1, ...     					   
                           'pad', 0) ;  
                                              
net.layers{end+1} = struct('type', 'pool', ...
                           'method', 'max', ...
                           'pool', [2 2], ...
                           'stride', 2, ...
                           'pad', 0) ;  

%Tamaño luego de esta capa: 12,12,180,1
net.layers{end+1} = struct('type', 'conv', ...
                           'weights',{{f*randn(3,3,256,180, 'single'),...
                           zeros(1,180,'single')}}, ...
                           'stride', 1, ...     					   
                           'pad', 0) ;  
                                              
net.layers{end+1} = struct('type', 'pool', ...
                           'method', 'max', ...
                           'pool', [2 2], ...
                           'stride', 2, ...
                           'pad', 0) ; 
 
%Tamaño luego de esta capa: 6,6,250,1
net.layers{end+1} = struct('type', 'conv', ...
                           'weights',{{f*randn(2,2,180,250, 'single'),...
                           zeros(1,250,'single')}}, ...
                           'stride', 1, ...     					   
                           'pad', 0) ;  
                                              
net.layers{end+1} = struct('type', 'pool', ...
                            'method', 'max', ...
                            'pool', [2 2], ...
                            'stride', 2, ...
                            'pad', 0) ; 
                       
%Tamaño luego de esta capa: 1,1,25,1
net.layers{end+1} = struct('type', 'conv', ...
                            'weights', {{f*randn(6,6,250,25, 'single'),...
                            zeros(1,25,'single')}}, ...
                            'stride', 1, ...
                            'pad', 0) ;

net.layers{end+1} = struct('type', 'softmaxloss') ;


end
